#!/usr/bin/env python
# -*- coding: utf-8 -*-

# (c) 2012, Nairobi, Kenya
# Written by Mauro Stettler <mauro.stettler@gmail.com>
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

DOCUMENTATION = '''
---
author: Mauro Stettler
module: virt_guest
short_description: Define a libvirt network
description:
  - This module creates a libvirt network based on a given XML definition.
  - This module requires the libvirt module.
version_added: "0.1"
options:
  net:
    description:
    - The name of the libvirt network.
    required: true
  state:
    choices: [ "present", "absent" ]
    default: "present"
    description:
    - Create or remove the network
    required: false
  src:
    description:
    - The path of the libvirt XML definition.
    required: false
examples:
  - description: Create a network
    code: virt_guest net=${name} src=/tmp/virt-${name}/network.xml
  - description: Remove a network
    code: virt_guest net=${name} state=absent
requirements: [ "libvirt" ]
notes:
  - Run this on the libvirt host.
'''

import sys

try:
    import libvirt
except ImportError:
    print "failed=True msg='libvirt python module unavailable'"
    sys.exit(1)

def main():

    module = AnsibleModule(
        argument_spec = dict(
            net=dict(required=True, aliases=['network']),
            state=dict(choices=['present','absent'], default='present'),
            src=dict(),
        ),
    )

    net = module.params['net']
    state = module.params['state']
    src = module.params['src']

    changed = False

    conn = libvirt.open("qemu:///system")
    try:
        vir_network = conn.networkLookupByName(net)
    except libvirt.libvirtError:
        vir_network = None

    if state == 'present' and vir_network is None:
        if not src:
            module.fail_json(msg="Parameter 'src' not defined.")
        conn.networkDefineXML( open(src,'r').read() )
        changed = True
    elif state == 'absent' and vir_network is not None:
        if vir_network.isActive():
            vir_network.destroy()
        vir_network.undefine()
        changed = True

    module.exit_json(changed=changed)

# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
